#
# Welcome, friend ❤. Thanks for trying out Monica. We hope you'll have fun.
#
# This file contains all the configuration options for Monica. If you need to
# change a core component of the app, do this here. However, you might need to
# restart the web server if you change some of these values.

# The name of your application. This is used as the default title of the pages.
APP_NAME=Monica

# Two choices: local|production. Use local if you want to install Monica as a
# development version. Use production otherwise.
APP_ENV=local

# The encryption key. This is the most important part of the application. Keep
# this secure otherwise, everyone will be able to access your application.
# Must be 32 characters long exactly.
# Use `php artisan key:generate` or
#`echo -n 'base64:'; openssl rand -base64 32` to generate a random key.
APP_KEY=

# true if you want to show debug information on errors, or if you need to debug
# locally. For production, put this to false.
APP_DEBUG=true

# The URL of your application.
APP_URL=http://localhost:8000

# Database to store information
# The documentation is here: https://laravel.com/docs/10.x/database
# You can also see the different values you can use in config/database.php
DB_CONNECTION=sqlite
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=monica
# DB_USERNAME=monica
# DB_PASSWORD=secret

# Database for tests - used for local development
DB_TEST_DRIVER=sqlite
# DB_TEST_DATABASE=monica
# DB_TEST_HOST=127.0.0.1
# DB_TEST_USERNAME=root
# DB_TEST_PASSWORD=root

# Frequency of creation of new log files. Logs are written when an error occurs.
# Refer to config/logging.php for the possible values.
LOG_CHANNEL=stack

# Setup trusted proxy — See https://laravel.com/docs/9.x/requests#configuring-trusted-proxies
# This allows to generate https URL when using a reverse proxy
# If you run this locally, you might need to set uncomment the line below
# APP_TRUSTED_PROXIES=*

# Cache, session, and queue parameters
# ⚠ Change this only if you know what you are doing
#. Cache: database, file, memcached, redis, dynamodb
#. Session: file, cookie, database, apc, memcached, redis, array
#. Queue: sync, database, beanstalkd, sqs, redis
#  If Queue is not set to 'sync', you'll have to set a queue worker
#  See https://laravel.com/docs/5.7/queues#running-the-queue-worker
CACHE_STORE=database
QUEUE_CONNECTION=sync
SESSION_DRIVER=database

# Redis, if you need it for the queues
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# Mailing
# Set the MAIL_MAILER to 'smtp' if you want to send emails.
MAIL_MAILER=log
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=hello@example.com
MAIL_FROM_NAME="${APP_NAME}"
MAIL_REPLY_TO_ADDRESS=hello@example.com
MAIL_REPLY_TO_NAME="${APP_NAME}"

# Search
## We use Laravel Scout to do full-text search.
## Read config/scout.php for more information.
## Note that you have to use: 'meilisearch', 'typesense', 'algolia' or the 'database'
## driver to enable search in Monica. Searching requires a queue to be configured.
SCOUT_DRIVER=database
SCOUT_QUEUE=true
## If you never intend to use the 'database' driver, you can set this value to false:
FULL_TEXT_INDEX=true
## Meilisearch settings
MEILISEARCH_URL=
MEILISEARCH_KEY=
## Typesense settings
TYPESENSE_HOST=
TYPESENSE_API_KEY=

# Notification channels
TELEGRAM_BOT_TOKEN=
TELEGRAM_BOT_URL=
TELEGRAM_BOT_WEBHOOK_URL=

# Default storage limit for accounts on this instance, in Mb
# 0 = unlimited
DEFAULT_STORAGE_LIMIT=50

# API key for uploading files
# We use Uploadcare (https://uploadcare.com) to upload and store all user
# generated files.
# Uploadcare is GDPR and all privacy laws compliant.
# It also provides a generous free plan.
UPLOADCARE_PUBLIC_KEY=
UPLOADCARE_PRIVATE_KEY=

# API key for geolocation services
# We use LocationIQ (https://locationiq.com/) to translate addresses to
# latitude/longitude coordinates. We could use Google instead but we don't
# want to give anything to Google, ever.
# LocationIQ offers 10,000 free requests per day.
LOCATION_IQ_API_KEY=

# API key for maps displays
# We use Mapbox (https://mapbox.com/) to display static maps.
# Mapbox has a generous 50 000 free requests per month.
# A username is also required, this is the one used upon account creation.
MAPBOX_API_KEY=
MAPBOX_USERNAME=
MAPBOX_CUSTOM_STYLE_NAME=
